<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.jabref.logic.util.io.FileUtilTest" tests="40" skipped="0" failures="0" errors="0" timestamp="2017-06-23T03:39:06" hostname="jessicadias-VPCEH40EB" time="0.496">
  <properties/>
  <testcase name="testGetFileExtensionLowerCaseAndTrimmingFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="testGetLinkedFileNameGetDefaultIfEmptyFieldNoKey" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="testGetLinkedFileNameBibTeXKey" classname="org.jabref.logic.util.io.FileUtilTest" time="0.035"/>
  <testcase name="getFileExtensionTrimsAndReturnsInLowercase" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testGetFileExtensionMultipleDotsFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.079"/>
  <testcase name="testGetFileExtensionNoExtension2File" classname="org.jabref.logic.util.io.FileUtilTest" time="0.028"/>
  <testcase name="testCopyFileFromExistSourcePathToExistDestinationPathWithOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.025"/>
  <testcase name="testRenameFileWithFromFileExistAndOtherToFileExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.037"/>
  <testcase name="testCopyFileFromEmptySourcePathToExistDestinationPathWithOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.012"/>
  <testcase name="testRenameFileWithFromFileExistAndToFileIsNull" classname="org.jabref.logic.util.io.FileUtilTest" time="0.015"/>
  <testcase name="testGetDefaultFileNameNoPatternNoBibTeXKey" classname="org.jabref.logic.util.io.FileUtilTest" time="0.015"/>
  <testcase name="testGetLinkedFileNameGetKeyIfEmptyField" classname="org.jabref.logic.util.io.FileUtilTest" time="0.016"/>
  <testcase name="testRenameFileWithFromFileExistAndToFileExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.021"/>
  <testcase name="getFileExtensionWithMultipleDotsString" classname="org.jabref.logic.util.io.FileUtilTest" time="0.01"/>
  <testcase name="testCopyFileSuccessfulWithoutOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.017"/>
  <testcase name="extensionBakAddedCorrectly" classname="org.jabref.logic.util.io.FileUtilTest" time="0.024"/>
  <testcase name="getFileExtensionWithSimpleString" classname="org.jabref.logic.util.io.FileUtilTest" time="0.016"/>
  <testcase name="extensionBakAddedCorrectlyToAFileContainedInTmpDirectory" classname="org.jabref.logic.util.io.FileUtilTest" time="0.025"/>
  <testcase name="testGetFileExtensionNoExtensionFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testCopyFileFromExistSourcePathToExistDestinationPathWithoutOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.003"/>
  <testcase name="testRenameFileWithFromFileExistAndToFileNotExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testRenameFileWithFromFileIsNullAndToFileExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testRenameFileWithFromFileNotExistAndToFileNotExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.007"/>
  <testcase name="testCopyFileFromEmptySourcePathToEmptyDestinationPathWithoutOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="testRenameFileWithFromFileNotExistAndToFileExist" classname="org.jabref.logic.util.io.FileUtilTest" time="0.007"/>
  <testcase name="testCopyFileSuccessfulWithOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testRenameFileWithFromFileIsNullAndToFileIsNull" classname="org.jabref.logic.util.io.FileUtilTest" time="0.016"/>
  <testcase name="getFileNameWithMultipleDotsString" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="uniquePathSubstrings" classname="org.jabref.logic.util.io.FileUtilTest" time="0.027"/>
  <testcase name="testGetFileExtensionSimpleFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="getFileExtensionWithDotAtStartReturnsEmptyExtension" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="getFileNameWithSimpleString" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testCopyFileFromExistSourcePathToOtherExistDestinationPathWithOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testCopyFileFromEmptySourcePathToEmptyDestinationPathWithOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.003"/>
  <testcase name="testRenameFileSuccessful" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="testGetLinkedFileNameNoPattern" classname="org.jabref.logic.util.io.FileUtilTest" time="0.001"/>
  <testcase name="testCopyFileFromExistSourcePathToOtherExistDestinationPathWithoutOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.003"/>
  <testcase name="testGetLinkedFileNameDefault" classname="org.jabref.logic.util.io.FileUtilTest" time="0.002"/>
  <testcase name="testCopyFileFromEmptySourcePathToExistDestinationPathWithoutOverrideExistFile" classname="org.jabref.logic.util.io.FileUtilTest" time="0.003"/>
  <testcase name="getFileExtensionWithNoDotReturnsEmptyExtension" classname="org.jabref.logic.util.io.FileUtilTest" time="0.023"/>
  <system-out><![CDATA[00:39:06.993 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Renaming Files failed
java.nio.file.FileAlreadyExistsException: /tmp/junit8719472521124676217/otherExistingTestFile.txt
	at sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:429) ~[?:1.8.0_111]
	at sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:262) ~[?:1.8.0_111]
	at java.nio.file.Files.move(Files.java:1395) ~[?:1.8.0_111]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:157) [main/:?]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:139) [main/:?]
	at org.jabref.logic.util.io.FileUtilTest.testRenameFileWithFromFileExistAndOtherToFileExist(FileUtilTest.java:292) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_111]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_111]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-3.5.jar:3.5]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:147) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:129) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-3.5.jar:3.5]
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46) [gradle-base-services-3.5.jar:3.5]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_111]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_111]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
00:39:07.009 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Path to the source file doesn't exist.
00:39:07.103 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Path to the destination file is not exists and the file shouldn't be replace.
00:39:07.173 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Path to the destination file is not exists and the file shouldn't be replace.
00:39:07.178 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Renaming Files failed
java.nio.file.NoSuchFileException: nonExistingTestPath
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86) ~[?:1.8.0_111]
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102) ~[?:1.8.0_111]
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107) ~[?:1.8.0_111]
	at sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:409) ~[?:1.8.0_111]
	at sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:262) ~[?:1.8.0_111]
	at java.nio.file.Files.move(Files.java:1395) ~[?:1.8.0_111]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:157) [main/:?]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:139) [main/:?]
	at org.jabref.logic.util.io.FileUtilTest.testRenameFileWithFromFileNotExistAndToFileNotExist(FileUtilTest.java:272) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_111]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_111]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-3.5.jar:3.5]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:147) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:129) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-3.5.jar:3.5]
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46) [gradle-base-services-3.5.jar:3.5]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_111]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_111]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
00:39:07.186 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Path to the source file doesn't exist.
00:39:07.188 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Renaming Files failed
java.nio.file.NoSuchFileException: nonExistingTestPath
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86) ~[?:1.8.0_111]
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102) ~[?:1.8.0_111]
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107) ~[?:1.8.0_111]
	at sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:409) ~[?:1.8.0_111]
	at sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:262) ~[?:1.8.0_111]
	at java.nio.file.Files.move(Files.java:1395) ~[?:1.8.0_111]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:157) [main/:?]
	at org.jabref.logic.util.io.FileUtil.renameFile(FileUtil.java:139) [main/:?]
	at org.jabref.logic.util.io.FileUtilTest.testRenameFileWithFromFileNotExistAndToFileExist(FileUtilTest.java:277) [test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_111]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_111]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) [gradle-testing-jvm-3.5.jar:3.5]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-3.5.jar:3.5]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) [?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) [gradle-testing-base-3.5.jar:3.5]
	at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:147) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:129) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) [gradle-messaging-3.5.jar:3.5]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) [gradle-base-services-3.5.jar:3.5]
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46) [gradle-base-services-3.5.jar:3.5]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_111]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_111]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
00:39:07.248 [Test worker] ERROR org.jabref.logic.util.io.FileUtil - Path to the source file doesn't exist.
org.junit.rules.TemporaryFolder@786f3fb0
00:39:07.254 [JavaFX Application Thread] ERROR org.jabref.logic.util.io.FileUtil - Path to the destination file is not exists and the file shouldn't be replace.
00:39:07.259 [JavaFX Application Thread] ERROR org.jabref.logic.util.io.FileUtil - Path to the source file doesn't exist.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
